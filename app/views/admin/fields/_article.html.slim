
- allow = policy(record)

= draftable_field f, :category, type: :association do |value|
  - f.association :category, wrapper: false, label: false, disabled: !allow.update_structure?, selected: value

/- priorities = Article.priorities.map {|k, v| [human_enum_name(Article, :priority, k), k]}
/= draftable_field f, :priority, type: :collection, input: { collection: priorities },  hint: translate('admin.hints.article_visibility') do |value|
  - f.input_field :priority, collection: priorities, selected: value, disabled: !allow.update_structure?

- if allow.update_structure?
  = draftable_date_field f, :published_at, hint: translate('admin.hints.article_published_at'), value: record.get_native_locale_attribute(:published_at), wrapper: { required: true }

= draftable_media_field f, :thumbnail, preview: true, wrapper: { required: true }

= draftable_field f, :excerpt, type: :text, hint: translate('admin.hints.excerpt', page: human_model_name(record.class).downcase) do |value|
  - f.input_field :excerpt, as: :text, rows: 3, value: value

= draftable_field f, :vimeo_id, type: :integer, hint: translate('admin.hints.article_video')
- if record.vimeo_id.present?
  .preview-item
    a.ui.label.link href="https://vimeo.com/#{record.vimeo_id}" target='_blank'
      | vimeo.com/#{record.vimeo_id}
      i.external.alternate.icon

- if allow.update_structure?
  - article_types = Article.article_types.map { |k, v| [human_enum_name(Article, :article_type, k), k] }
  = f.input :article_type, collection: article_types, hint: translate('admin.hints.article_article_type')

  .ui.basic.segment data-type-segment='article'
    .ui.small.dividing.header #{human_attribute_name(Article, :article_type)}: #{human_enum_name(Article, :article_type, :article)}

    = f.association :author, hint: translate('admin.hints.article_author'), input_html: { class: 'clearable' }

    .ui.divider

  .ui.basic.segment data-type-segment='artwork'
    .ui.small.dividing.header #{human_attribute_name(Article, :article_type)}: #{human_enum_name(Article, :article_type, :artwork)}

    = f.association :author, hint: translate('admin.hints.article_author'), input_html: { class: 'clearable' }

    .ui.divider

  .ui.basic.segment data-type-segment='event'
    .ui.small.dividing.header #{human_attribute_name(Article, :article_type)}: #{human_enum_name(Article, :article_type, :event)}

    - if allow.update_structure?
      = draftable_date_field f, hint: translate('admin.hints.article_date')
    - elsif record.date
      = f.input :date do
        .ui.icon.label
          i.calendar.icon
          = record.date

    - if allow.update_structure?
      = draftable_coordinates_field f
      .hint = translate('admin.hints.article_coordinates')
    - elsif record.coordinates.present?
      = f.input :coordinates do
        .ui.icon.label
          i.marker.icon
          = record.coordinates.join(', ')

    .ui.divider

  .ui.basic.segment data-type-segment='report'
    .ui.small.dividing.header #{human_attribute_name(Article, :article_type)}: #{human_enum_name(Article, :article_type, :report)}

    p.hint = translate('admin.hints.article_type_report')

    .ui.divider

- if %w[regional_admin super_admin].include?(current_user.role)
  = f.association :owner, collection: User.writer, hint: translate('admin.hints.article_owner'), input_html: { class: 'clearable' }
- elsif current_user.writer? && record.new_record?
  = f.hidden_field :owner_id, value: current_user.id
